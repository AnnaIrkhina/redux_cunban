{"version":3,"sources":["Item.js","Board.js","App.js","Redux/reducer.js","Redux/store.js","index.js"],"names":["connect","state","dispatch","deleteTask","taskId","type","payload","saveTitleTask","id","title","moveLeft","moveRight","props","console","log","element","useState","sowMenu","setShowMenu","editMode","setEditMode","name","setTitle","key","value","onChange","e","target","onClick","class","onMouseEnter","onMouseLeave","status","addTask","tasks","columns","className","map","column","filter","el","filteredEl","App","initialState","priority","kanbanControlPanel","action","newState","Math","random","task","newStatus","findIndex","length","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44166b80.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {connect} from 'react-redux';\r\n\r\nfunction Item(props) {\r\n    console.log('item', props);\r\n    const { element } = props;\r\n    const [sowMenu, setShowMenu] = useState(false);\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [title, setTitle] = useState(element.name);\r\n    \r\n    const editTask = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const saveTitle = () => {\r\n        setEditMode(false)\r\n        props.saveTitleTask({ id: element.id, title })\r\n    }\r\n\r\n    return (\r\n        <li key={element.id}>\r\n            {\r\n                !editMode?               \r\n                <div class='item' onMouseEnter={() => setShowMenu(true)} onMouseLeave={() => setShowMenu(false)}>\r\n                    <div>\r\n                        {element.name}\r\n                    </div>\r\n                </div>\r\n                :\r\n                <>\r\n                    <input value={title} onChange = {e => setTitle(e.target.value)} />\r\n                    <button onClick = {saveTitle}>Save</button>\r\n                </>\r\n            }\r\n            {\r\n                sowMenu && \r\n                <div class=\"menu\" onMouseEnter={() => setShowMenu(true)} onMouseLeave={() => setShowMenu(false)}>\r\n                    {element.status !== 'todo' && <button onClick={() => props.moveRight(element.id)}>Right</button>}\r\n                    {element.status !== 'done' && <button onClick={() => props.moveLeft(element.id)}>Left</button>}\r\n                    <button onClick = {editTask}>Edit</button>\r\n                    <button onClick = {() => props.deleteTask(element.id)}>Delete</button>  \r\n                </div>\r\n            }\r\n        </li>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    deleteTask:(taskId)=> dispatch({type:'deleteTask', payload: taskId}),\r\n    saveTitleTask:({id, title}) => dispatch({type: 'saveTitleTask', payload: {id, title}}),\r\n    moveLeft:(taskId) => dispatch({type:'moveLeft', payload: taskId}),\r\n    moveRight:(taskId) => dispatch({type:'moveRight', payload: taskId})\r\n})\r\n\r\nconst mapStateToProps = (state) => ({state})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);\r\n//export default Item;","import React, {useState} from 'react';\nimport './App.css';\nimport Item from './Item.js'\nimport {connect} from 'react-redux';\n\nfunction Board(props) {\n    const tasks = props.state.tasks\n    const columns = props.state.columns\n\n    const[title, setTitle] = useState('')\n    const addClick = ()=>{\n        props.addTask(title)\n            setTitle('')\n    }\n    return (\n        <div className=\"App\">\n            <div class='container'>\n                <h1>Canban board</h1>\n                <input value={title} onChange={e=>setTitle(e.target.value)} /><button onClick={addClick}>Add</button>\n            </div>\n            <div class=\"container text-center\">\n                <div class=\"row\">\n                    {\n                        columns.map(column => \n                            <div class=\"coll\">\n                                <h2>{column.title}</h2>\n                                <ul>\n                                {\n                                    tasks.filter(el => el.status === column.status).map( filteredEl => \n                                        <Item element = {filteredEl}/>\n                                    )\n                                }\n                                </ul>\n                            </div>\n                        )\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    addTask:(title)=> dispatch({type:'addTask', payload:title})\n})\n\nconst mapStateToProps = (state) => ({\n    state\n\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(Board);\n","import React from 'react';\nimport './App.css';\nimport Board from './Board'\n\nfunction App() {\n  return (\n      < div className=\"App\">\n          <Board />\n      </div>\n\n  );\n}\n\nexport default App;\n","const initialState = {\r\n\r\n    tasks: [\r\n        {id: 1, status: 'progress', name: 'Text todo1'},\r\n        {id: 2, status: 'todo', name: 'Text todo2'},\r\n        {id: 3, status: 'review', name: 'Text todo3'},\r\n        {id: 4, status: 'done', name: 'Text todo4'},\r\n    ],\r\n    columns: [\r\n        {id: 1, status: 'todo', priority: 'Text todo1', title: 'Todo'},\r\n        {id: 2, status: 'progress', priority: 'Text todo2', title: 'Progress'},\r\n        {id: 3, status: 'review', priority: 'Text todo3', title: 'Review'},\r\n        {id: 4, status: 'done', priority: 'Text todo4', title: 'Done'},\r\n    ],\r\n};\r\nconst kanbanControlPanel = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'deleteTask':\r\n            const newState = {...state, tasks:state.tasks.filter(el=>el.id !== action.payload)};\r\n            return newState\r\n        case 'addTask':\r\n            return {...state, tasks:[...state.tasks, {id:Math.random(), name: action.payload, status: 'todo'}]}\r\n\r\n        case 'saveTitleTask':\r\n            const { title, id } = action.payload\r\n            if(!title || ! id) return state\r\n            return {...state, tasks: state.tasks.map(task => {\r\n                \r\n                if(task.id === id) {\r\n                    task.status = title\r\n                }\r\n                return task;\r\n            })}\r\n\r\n        case 'moveLeft':\r\n            return {...state, tasks: state.tasks.map(task => {\r\n                \r\n                if(task.id === action.payload) {\r\n                    const newStatus = state.columns.findIndex((el) => (el.status === task.status)) + 1\r\n                    task.status = newStatus < state.columns.length ? state.columns[newStatus].status : task.status;\r\n                }\r\n                return task;\r\n            })}\r\n            case 'moveRight':\r\n                return {...state, tasks: state.tasks.map(task => {\r\n                    \r\n                    if(task.id === action.payload) {\r\n                        const newStatus = state.columns.findIndex((el) => (el.status === task.status)) - 1\r\n                        task.status = newStatus >=  0 ? state.columns[newStatus].status : task.status;\r\n                    }\r\n                    return task;\r\n                })}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default kanbanControlPanel;","import { createStore, applyMiddleware} from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport kanbanControlPanel from './reducer';\r\n\r\nconst store = createStore(kanbanControlPanel, composeWithDevTools(\r\n    applyMiddleware()\r\n));\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport store from \"./Redux/store\";\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}